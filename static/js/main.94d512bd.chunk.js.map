{"version":3,"sources":["sounds/sound_failure.mp3","sounds/sound_success.mp3","images/sounfOn.png","images/sounfOff.png","images/question-mark.png","images/close-mark.png","components/Form/Form.js","components/Help/Help.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Form","soundOn","setSoundOn","sendForm","RandomVerbs","check","skip","error","className","onSubmit","e","onClick","src","sounOnImg","alt","sounOffImg","disabled","Help","showHelp","setShowHelp","closeMarkImg","questionMarkImg","title","App","useState","randomVerb","setRandomVerb","randomWord","setRandomWord","text","setText","setError","generateSet","random","Math","floor","ListOfIrregularVerbs","length","useEffect","playSound","audio","Audio","currentTime","play","map","x","type","key","autoFocus","value","onChange","target","preventDefault","toLowerCase","goodSound","setTimeout","baddSound","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"ihFAAAA,EAAOC,QAAU,IAA0B,2C,kBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,qNCsC5BC,EAjCF,SAAC,GAAD,IACXC,EADW,EACXA,QACAC,EAFW,EAEXA,WACAC,EAHW,EAGXA,SACAC,EAJW,EAIXA,YACAC,EALW,EAKXA,MACAC,EANW,EAMXA,KACAC,EAPW,EAOXA,MAPW,OASX,0BACEC,UAAS,eAAUD,EAAQ,QAAU,IACrCE,SAAU,SAACC,GAAD,OAAOP,EAASO,KAE1B,yBAAKF,UAAU,SACZP,EACC,yBAAKU,QAAS,kBAAMT,GAAYD,IAAUW,IAAKC,IAAWC,IAAI,KAE9D,yBAAKH,QAAS,kBAAMT,GAAYD,IAAUW,IAAKG,IAAYD,IAAI,MAGnE,yBAAKN,UAAU,SAASJ,GAExB,yBAAKI,UAAU,WACb,4BAAQA,UAAU,QAAQQ,SAAUT,EAAOI,QAAS,kBAAMN,MAA1D,SAGA,4BAAQG,UAAU,OAAOQ,SAAUT,EAAOI,QAAS,kBAAML,MAAzD,W,iCCCSW,EA3BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,YAAb,OACX,yBAAKX,UAAU,QACb,yBAAKA,UAAS,kBAAaU,EAAW,SAAW,KAC/C,6EACA,oNAKA,wCACA,yBACEN,IAAKQ,IACLN,IAAI,GACJN,UAAU,QACVG,QAAS,kBAAMQ,GAAY,OAG/B,yBACEX,UAAS,wBAAmBU,EAAW,SAAW,IAClDN,IAAKS,IACLP,IAAI,GACJQ,MAAM,OACNX,QAAS,kBAAMQ,GAAaD,QCwEnBK,EAvFH,WAAO,IAAD,EACcC,oBAAS,GADvB,mBACTvB,EADS,KACAC,EADA,OAEoBsB,mBAAS,IAF7B,mBAETC,EAFS,KAEGC,EAFH,OAGoBF,mBAAS,IAH7B,mBAGTG,EAHS,KAGGC,EAHH,OAIQJ,mBAAS,IAJjB,mBAITK,EAJS,KAIHC,EAJG,OAKgBN,oBAAS,GALzB,mBAKTN,EALS,KAKCC,EALD,OAMUK,oBAAS,GANnB,mBAMTjB,EANS,KAMFwB,EANE,KAUVC,EAAc,WAClB,IAAMC,EAASC,KAAKC,MAAMD,KAAKD,SAAWG,EAAqBC,QACzDZ,EAAaW,EAAqBH,GAClCN,EAAaO,KAAKC,MAAsB,EAAhBD,KAAKD,UACnCP,EAAcD,GACdG,EAAcD,GACdG,EAAQ,KAGVQ,qBAAU,WACRN,MACC,IAEH,IAAMO,EAAY,SAAC3B,GACjB,GAAIX,EAAS,CACX,IAAMuC,EAAQ,IAAIC,MAAM7B,GACxB4B,EAAME,YAAc,EACpBF,EAAMG,SA6BJvC,EAAc,CAAC,EAAG,EAAG,GAAGwC,KAAI,SAACC,GAAD,OAChClB,IAAekB,EACb,2BACEC,KAAK,OACLtC,UAAWD,EAAQ,QAAU,GAC7BwC,IAAKF,EACLG,WAAS,EACTC,MAAOpB,EACPqB,SAAU,SAACxC,GAAD,OAAOoB,EAAQpB,EAAEyC,OAAOF,UAGpC,0BAAMF,IAAKF,GAAIpB,EAAWoB,OAI9B,OACE,yBAAKrC,UAAU,OACb,kBAAC,EAAD,CACEP,QAASA,EACTC,WAAYA,EACZC,SApEW,SAACO,GAAD,OAAOA,EAAE0C,kBAqEpBhD,YAAaA,EACbC,MA/CQ,WACRwB,EAAKwB,gBAAkB5B,EAAWE,IACpCK,IACAO,EAAUe,OAEVvB,GAAS,GACTD,EAAQL,EAAWE,IACnB4B,YAAW,WACTvB,IACAD,GAAS,KACR,KACHQ,EAAUiB,OAqCRlD,KAjCO,WACXyB,GAAS,GACTD,EAAQL,EAAWE,IACnB4B,YAAW,WACTvB,IACAD,GAAS,KACR,KACHQ,EAAUiB,MA2BNjD,MAAOA,IAET,kBAAC,EAAD,CAAMW,SAAUA,EAAUC,YAAaA,MClFzBsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAlE,GACLmE,QAAQnE,MAAMA,EAAMoE,c","file":"static/js/main.94d512bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sound_failure.7768c1d0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sound_success.dcbb5b43.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sounfOn.d0b04512.png\";","module.exports = __webpack_public_path__ + \"static/media/sounfOff.7b4b2118.png\";","module.exports = __webpack_public_path__ + \"static/media/question-mark.6207b3dc.png\";","module.exports = __webpack_public_path__ + \"static/media/close-mark.e2148c85.png\";","import React from \"react\";\r\n\r\nimport sounOnImg from \"../../images/sounfOn.png\";\r\nimport sounOffImg from \"../../images/sounfOff.png\";\r\n\r\nconst Form = ({\r\n  soundOn,\r\n  setSoundOn,\r\n  sendForm,\r\n  RandomVerbs,\r\n  check,\r\n  skip,\r\n  error,\r\n}) => (\r\n  <form\r\n    className={`Form ${error ? \"error\" : \"\"}`}\r\n    onSubmit={(e) => sendForm(e)}\r\n  >\r\n    <div className=\"sound\">\r\n      {soundOn ? (\r\n        <img onClick={() => setSoundOn(!soundOn)} src={sounOnImg} alt=\"\" />\r\n      ) : (\r\n        <img onClick={() => setSoundOn(!soundOn)} src={sounOffImg} alt=\"\" />\r\n      )}\r\n    </div>\r\n    <div className=\"input\">{RandomVerbs}</div>\r\n\r\n    <div className=\"buttons\">\r\n      <button className=\"check\" disabled={error} onClick={() => check()}>\r\n        Check\r\n      </button>\r\n      <button className=\"skip\" disabled={error} onClick={() => skip()}>\r\n        Skip\r\n      </button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nimport questionMarkImg from \"../../images/question-mark.png\";\r\nimport closeMarkImg from \"../../images/close-mark.png\";\r\n\r\nconst Help = ({ showHelp, setShowHelp }) => (\r\n  <div className=\"Help\">\r\n    <div className={`content ${showHelp ? \"active\" : \"\"}`}>\r\n      <p>This app will help you master irregular verbs.</p>\r\n      <p>\r\n        Just type missing word and click 'check' and the app will indicate if\r\n        the choosen word was correct. If you are not sure you can click a 'skip'\r\n        button and you'll get a correct answer\r\n      </p>\r\n      <p>Have fun!</p>\r\n      <img\r\n        src={closeMarkImg}\r\n        alt=\"\"\r\n        className=\"close\"\r\n        onClick={() => setShowHelp(false)}\r\n      />\r\n    </div>\r\n    <img\r\n      className={`question-mark ${showHelp ? \"active\" : \"\"}`}\r\n      src={questionMarkImg}\r\n      alt=\"\"\r\n      title=\"Help\"\r\n      onClick={() => setShowHelp(!showHelp)}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Help;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport ListOfIrregularVerbs from \"./data/IrregularVerbs.json\";\r\n\r\nimport goodSound from \"./sounds/sound_success.mp3\";\r\nimport baddSound from \"./sounds/sound_failure.mp3\";\r\n\r\nimport \"./scss/main.css\";\r\n\r\nimport Form from \"./components/Form/Form\";\r\nimport Help from \"./components/Help/Help\";\r\n\r\nconst App = () => {\r\n  const [soundOn, setSoundOn] = useState(true);\r\n  const [randomVerb, setRandomVerb] = useState(\"\");\r\n  const [randomWord, setRandomWord] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [showHelp, setShowHelp] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const sendForm = (e) => e.preventDefault();\r\n\r\n  const generateSet = () => {\r\n    const random = Math.floor(Math.random() * ListOfIrregularVerbs.length);\r\n    const randomVerb = ListOfIrregularVerbs[random];\r\n    const randomWord = Math.floor(Math.random() * 3);\r\n    setRandomVerb(randomVerb);\r\n    setRandomWord(randomWord);\r\n    setText(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    generateSet();\r\n  }, []);\r\n\r\n  const playSound = (src) => {\r\n    if (soundOn) {\r\n      const audio = new Audio(src);\r\n      audio.currentTime = 0;\r\n      audio.play();\r\n    }\r\n  };\r\n\r\n  const check = () => {\r\n    if (text.toLowerCase() === randomVerb[randomWord]) {\r\n      generateSet();\r\n      playSound(goodSound);\r\n    } else {\r\n      setError(true);\r\n      setText(randomVerb[randomWord]);\r\n      setTimeout(() => {\r\n        generateSet();\r\n        setError(false);\r\n      }, 4000);\r\n      playSound(baddSound);\r\n    }\r\n  };\r\n\r\n  const skip = () => {\r\n    setError(true);\r\n    setText(randomVerb[randomWord]);\r\n    setTimeout(() => {\r\n      generateSet();\r\n      setError(false);\r\n    }, 4000);\r\n    playSound(baddSound);\r\n  };\r\n\r\n  const RandomVerbs = [0, 1, 2].map((x) =>\r\n    randomWord === x ? (\r\n      <input\r\n        type=\"text\"\r\n        className={error ? \"error\" : \"\"}\r\n        key={x}\r\n        autoFocus\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n    ) : (\r\n      <span key={x}>{randomVerb[x]}</span>\r\n    )\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Form\r\n        soundOn={soundOn}\r\n        setSoundOn={setSoundOn}\r\n        sendForm={sendForm}\r\n        RandomVerbs={RandomVerbs}\r\n        check={check}\r\n        skip={skip}\r\n        error={error}\r\n      />\r\n      <Help showHelp={showHelp} setShowHelp={setShowHelp} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}